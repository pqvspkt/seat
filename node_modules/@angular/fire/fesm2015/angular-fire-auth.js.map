{"version":3,"file":"angular-fire-auth.js","sources":["../../../src/auth/base.ts","../../../src/auth/auth.ts","../../../src/auth/auth.module.ts"],"sourcesContent":["export const proxyPolyfillCompat = {\n  app: null,\n  applyActionCode: null,\n  checkActionCode: null,\n  confirmPasswordReset: null,\n  createUserWithEmailAndPassword: null,\n  currentUser: null,\n  fetchSignInMethodsForEmail: null,\n  isSignInWithEmailLink: null,\n  getRedirectResult: null,\n  languageCode: null,\n  settings: null,\n  onAuthStateChanged: null,\n  onIdTokenChanged: null,\n  sendSignInLinkToEmail: null,\n  sendPasswordResetEmail: null,\n  setPersistence: null,\n  signInAndRetrieveDataWithCredential: null,\n  signInAnonymously: null,\n  signInWithCredential: null,\n  signInWithCustomToken: null,\n  signInWithEmailAndPassword: null,\n  signInWithPhoneNumber: null,\n  signInWithEmailLink: null,\n  signInWithPopup: null,\n  signInWithRedirect: null,\n  signOut: null,\n  tenantId: null,\n  updateCurrentUser: null,\n  useDeviceLanguage: null,\n  useEmulator: null,\n  verifyPasswordResetCode: null,\n};\n","import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { Observable, of, from } from 'rxjs';\nimport { switchMap, map, observeOn, shareReplay, first } from 'rxjs/operators';\nimport {\n  FIREBASE_OPTIONS,\n  FIREBASE_APP_NAME,\n  FirebaseOptions,\n  FirebaseAppConfig,\n  ɵPromiseProxy,\n  ɵlazySDKProxy,\n  ɵfirebaseAppFactory,\n  ɵAngularFireSchedulers,\n  ɵkeepUnstableUntilFirstFactory,\n  ɵapplyMixins\n} from '@angular/fire';\nimport firebase from 'firebase/app';\nimport { isPlatformServer } from '@angular/common';\nimport { proxyPolyfillCompat } from './base';\n\nexport interface AngularFireAuth extends ɵPromiseProxy<firebase.auth.Auth> {}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuth {\n\n  /**\n   * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\n   */\n  public readonly authState: Observable<firebase.User|null>;\n\n  /**\n   * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\n   */\n  public readonly idToken: Observable<string|null>;\n\n  /**\n   * Observable of the currently signed-in user (or null).\n   */\n  public readonly user: Observable<firebase.User|null>;\n\n  /**\n   * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\n   * helper properties for getting different data associated with the token as well as all the decoded payload claims\n   * (or null).\n   */\n  public readonly idTokenResult: Observable<firebase.auth.IdTokenResult|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string|FirebaseAppConfig|null|undefined,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n\n    const auth = of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => zone.runOutsideAngular(() => app.auth())),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    if (isPlatformServer(platformId)) {\n\n      this.authState = this.user = this.idToken = this.idTokenResult = of(null);\n\n    } else {\n\n      // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\n      //       (e.g, `import { auth } from 'firebase/app'`) are getting an undefined auth object unexpectedly\n      //       as we're completely lazy. Let's eagerly load the Auth SDK here.\n      //       There could potentially be race conditions still... but this greatly decreases the odds while\n      //       we reevaluate the API.\n      const _ = auth.pipe(first()).subscribe();\n\n      this.authState = auth.pipe(\n        switchMap(auth => auth.getRedirectResult().then(() => auth, () => auth)),\n        switchMap(auth => zone.runOutsideAngular(() => new Observable<firebase.User|null>(auth.onAuthStateChanged.bind(auth)))),\n        keepUnstableUntilFirst\n      );\n\n      this.user = auth.pipe(\n        switchMap(auth => auth.getRedirectResult().then(() => auth, () => auth)),\n        switchMap(auth => zone.runOutsideAngular(() => new Observable<firebase.User|null>(auth.onIdTokenChanged.bind(auth)))),\n        keepUnstableUntilFirst\n      );\n\n      this.idToken = this.user.pipe(\n        switchMap(user => user ? from(user.getIdToken()) : of(null))\n      );\n\n      this.idTokenResult = this.user.pipe(\n        switchMap(user => user ? from(user.getIdTokenResult()) : of(null))\n      );\n\n    }\n\n    return ɵlazySDKProxy(this, auth, zone);\n\n  }\n\n}\n\nɵapplyMixins(AngularFireAuth, [proxyPolyfillCompat]);\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuth } from './auth';\n\n@NgModule({\n  providers: [ AngularFireAuth ]\n})\nexport class AngularFireAuthModule { }\n"],"names":[],"mappings":"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"}