!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("firebase/app"),require("rxjs"),require("rxjs/operators"),require("@angular/fire"),require("@angular/common")):"function"==typeof define&&define.amd?define("@angular/fire/messaging",["exports","@angular/core","firebase/app","rxjs","rxjs/operators","@angular/fire","@angular/common"],n):n(((e="undefined"!=typeof globalThis?globalThis:e||self).angular=e.angular||{},e.angular.fire=e.angular.fire||{},e.angular.fire.messaging={}),e.ng.core,e.firebase,e.rxjs,e.rxjs.operators,e.angular.fire,e.ng.common)}(this,(function(e,n,r,t,i,s,o){"use strict";function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a=u(r),l=function(e,n,r,u){var l=this,p=new s.ɵAngularFireSchedulers(u),c=t.of(void 0).pipe(i.subscribeOn(p.outsideAngular),i.observeOn(p.insideAngular),i.switchMap((function(){return o.isPlatformServer(r)?t.EMPTY:import("firebase/messaging")})),i.map((function(){return s.ɵfirebaseAppFactory(e,u,n)})),i.map((function(e){return e.messaging()})),i.shareReplay({bufferSize:1,refCount:!1}));this.requestPermission=c.pipe(i.subscribeOn(p.outsideAngular),i.observeOn(p.insideAngular),i.switchMap((function(e){return a.default.messaging.isSupported()?e.requestPermission():t.throwError("Not supported.")}))),this.getToken=c.pipe(i.subscribeOn(p.outsideAngular),i.observeOn(p.insideAngular),i.switchMap((function(e){return a.default.messaging.isSupported()&&"granted"===Notification.permission?e.getToken():t.EMPTY})),i.defaultIfEmpty(null));var g=c.pipe(i.subscribeOn(p.outsideAngular),i.observeOn(p.insideAngular),i.switchMap((function(e){return a.default.messaging.isSupported()?new t.Observable((function(n){return e.onTokenRefresh(n.next,n.error,n.complete)})):t.EMPTY})),i.switchMapTo(this.getToken));return this.tokenChanges=c.pipe(i.subscribeOn(p.outsideAngular),i.observeOn(p.insideAngular),i.switchMap((function(e){return a.default.messaging.isSupported()?t.concat(l.getToken,g):t.EMPTY}))),this.messages=c.pipe(i.subscribeOn(p.outsideAngular),i.observeOn(p.insideAngular),i.switchMap((function(e){return a.default.messaging.isSupported()?new t.Observable((function(n){return e.onMessage((function(e){return n.next(e)}),(function(e){return n.error(e)}),(function(){return n.complete()}))})):t.EMPTY}))),this.requestToken=t.of(void 0).pipe(i.switchMap((function(){return l.requestPermission})),i.catchError((function(){return t.of(null)})),i.mergeMap((function(){return l.tokenChanges}))),this.deleteToken=function(e){return c.pipe(i.subscribeOn(p.outsideAngular),i.observeOn(p.insideAngular),i.switchMap((function(n){return n.deleteToken(e)})),i.defaultIfEmpty(!1))},s.ɵlazySDKProxy(this,c,u)};l.decorators=[{type:n.Injectable,args:[{providedIn:"any"}]}],l.ctorParameters=function(){return[{type:void 0,decorators:[{type:n.Inject,args:[s.FIREBASE_OPTIONS]}]},{type:void 0,decorators:[{type:n.Optional},{type:n.Inject,args:[s.FIREBASE_APP_NAME]}]},{type:Object,decorators:[{type:n.Inject,args:[n.PLATFORM_ID]}]},{type:n.NgZone}]},l.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new l(n.ɵɵinject(s.FIREBASE_OPTIONS),n.ɵɵinject(s.FIREBASE_APP_NAME,8),n.ɵɵinject(n.PLATFORM_ID),n.ɵɵinject(n.NgZone))},token:l,providedIn:"any"}),s.ɵapplyMixins(l,[{deleteToken:null,getToken:null,onMessage:null,onBackgroundMessage:null,onTokenRefresh:null,requestPermission:null,setBackgroundMessageHandler:null,useServiceWorker:null,usePublicVapidKey:null}]);var p=function(){};p.decorators=[{type:n.NgModule,args:[{providers:[l]}]}],e.AngularFireMessaging=l,e.AngularFireMessagingModule=p,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-fire-messaging.umd.min.js.map