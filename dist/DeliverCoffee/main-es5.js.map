{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/coffee/coffee-page/coffee-page.component.ts","webpack:///src/app/coffee/coffee-page/coffee-page.component.html","webpack:///src/app/coffee/coffee/coffee.component.ts","webpack:///src/app/coffee/coffee/coffee.component.html","webpack:///src/app/coffee/listCoffee/list-coffee/list-coffee.component.ts","webpack:///src/app/coffee/listCoffee/list-coffee/list-coffee.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/seat/list-seat-done/list-seat-done.component.ts","webpack:///src/app/seat/list-seat-done/list-seat-done.component.html","webpack:///src/app/seat/list-seat/list-seat.component.ts","webpack:///src/app/seat/list-seat/list-seat.component.html","webpack:///src/app/seat/seat-detail/seat-detail.component.ts","webpack:///src/app/seat/seat-detail/seat-detail.component.html","webpack:///src/app/shared/coffee/coffee.service.ts","webpack:///src/app/shared/coffee/coffee.ts","webpack:///src/app/shared/service/auth.service.ts","webpack:///src/app/shared/visiting/visiting.service.ts","webpack:///src/app/shared/visiting/visiting.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","declarations","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","providers","bootstrap","CoffeePageComponent","coffeeService","messageEvent","$event","sendDataCoffee","key","GetCoffeeByID","deliverCoffeeID","coffeeObject","GetCoffee","valueChanges","subscribe","data","console","log","deliverCoffee","getDataCoffee","CoffeeComponent","formBuilder","toastr","coffeeForm","group","$key","name","address","urlQR","createdDate","createdBy","updatedDate","updatedBy","status","ownerCoffee","phone","email","isAdd","warn","setValue","coffee","AddCoffee","resetForm","success","controls","value","reset","submitCoffee","ListCoffeeComponent","s","GetListCoffee","snapshotChanges","coffees","forEach","item","a","payload","toJSON","unshift","SendDataCoffee","emit","LoginComponent","authService","router","fb","route","errorMessage","coffeeID","snapshot","params","loginForm","required","password","doFacebookLogin","res","user","uid","localStorage","setItem","navigate","doGoogleLogin","tryFacebookLogin","tryGoogleLogin","tryTwitterLogin","ListSeatDoneComponent","visitingService","dateForlder","GetForMatDateDDMMYYYY","GetListVisiting","seats","push","seat","UpdateVisiting","ListSeatComponent","SeatDetailComponent","_fb","_visitingService","_toastr","userID","visitingTable","isAdded","frmInputVisiting","cardCode","visiting","orderedDate","ordereddBy","doneDate","doneBy","AddVisiting","alert","CoffeeService","db","object","listCoffee","list","GetCurrentDate","update","remove","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","dateTime","providedIn","Coffee","AuthService","afAuth","reject","provider","auth","FacebookAuthProvider","signInWithPopup","err","TwitterAuthProvider","GoogleAuthProvider","addScope","createUserWithEmailAndPassword","signInWithEmailAndPassword","currentUser","signOut","VisitingService","dateDDMMYYYY","listVisiting","dateFolder","dateObj","month","day","String","padStart","year","Visiting","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Use RouterModule, Routes for activating routing in angular\nimport { RouterModule, Routes } from '@angular/router';\n\n// Include components for in which router service to be used\nimport {CoffeeComponent} from './coffee/coffee/coffee.component';\nimport {SeatDetailComponent} from './seat/seat-detail/seat-detail.component';\nimport {ListSeatComponent} from './seat/list-seat/list-seat.component';\nimport {ListSeatDoneComponent} from './seat/list-seat-done/list-seat-done.component';\nimport {LoginComponent} from './login/login.component'\n\n// Routes array define component along with the path name for url\nconst routes: Routes = [\n  { path: '', redirectTo: 'coffee', pathMatch: 'full' },\n  { path: 'coffee', component: CoffeeComponent },\n  { path: 'login/:id', component: LoginComponent },\n  { path: 'coffee-seat/:id', component:SeatDetailComponent},\n  { path: 'coffee-list-seat/:id', component:ListSeatComponent},\n  { path: 'coffee-list-seat-done/:id', component:ListSeatDoneComponent},\n  { path: 'coffee-seat', component:SeatDetailComponent},\n  { path: 'coffee-list-seat', component:ListSeatComponent},\n  { path: 'coffee-list-seat-done', component:ListSeatDoneComponent},\n\n];\n\n\n\n// Import RouterModule and inject routes array in it and dont forget to export the RouterModule\n@NgModule({\n  imports: [CommonModule,RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   title = 'DeliverCoffee';\n// }\n\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport * as firebase from \"firebase\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title=\"demoApp\";\n  provider:any;\n  user:any;\n\n  constructor(){\n\n  }\n  \n  ngOnInit(): void {\n    // var provider = new firebase.default.auth.GoogleAuthProvider();\n    // var test = new firebase.default.auth.FacebookAuthProvider()\n    // this.provider = provider;\n    // firebase.default.auth().onAuthStateChanged(user=> {\n    //   this.user = user;\n    // });\n\n  }\n\n \n\n  \n}","\n<!-- <app-visiting-detail></app-visiting-detail> -->\n\n\n  <!-- Sidebar navigation -->\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      \n  \n      <!-- Main content -->\n      <main role=\"main\" class=\"col-md-12\">\n        <div class=\"inner-adjust\">\n  \n          <!-- Use router template to show the components for which router service is activated -->\n           <!-- <app-coffee></app-coffee> -->\n         <!-- <app-list-coffee></app-list-coffee> -->\n         <!-- <app-coffee-page></app-coffee-page> -->\n<!-- Use router template to show the components for which router service is activated -->\n<router-outlet></router-outlet>\n         \n        </div>\n      </main>\n  \n    </div>\n  </div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\n// Import below modules for NGX Toastr\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n// Firebase\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from '../environments/environment';\n// import { AngularFireModule } from 'angularfire2';\n\n\n\n\n// Component\nimport { AppComponent } from './app.component';\nimport { SeatDetailComponent } from './seat/seat-detail/seat-detail.component';\nimport { CoffeeComponent } from './coffee/coffee/coffee.component';\nimport { ListCoffeeComponent } from './coffee/listCoffee/list-coffee/list-coffee.component';\nimport { CoffeePageComponent } from './coffee/coffee-page/coffee-page.component';\nimport { ListSeatComponent } from './seat/list-seat/list-seat.component';\nimport { ListSeatDoneComponent } from './seat/list-seat-done/list-seat-done.component';\nimport { LoginComponent } from './login/login.component';\n\n// Service\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SeatDetailComponent,\n    CoffeeComponent,\n    ListCoffeeComponent,\n    CoffeePageComponent,\n    ListSeatComponent,\n    ListSeatDoneComponent,\n    LoginComponent,\n    // LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features\n    AngularFireStorageModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot() // ToastrModule added\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component,OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport {CoffeeService} from '../../shared/coffee/coffee.service';\nimport {Coffee} from '../../shared/coffee/coffee';\n\n\n@Component({\n  selector: 'app-coffee-page',\n  templateUrl: './coffee-page.component.html',\n  styleUrls: ['./coffee-page.component.css']\n})\nexport class CoffeePageComponent implements OnInit {\n\n  @Output() messageEvent = new EventEmitter<string>();\n  deliverCoffeeID:string;\n  deliverCoffee : Coffee\n  constructor(\n    public coffeeService : CoffeeService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  getDataCoffee($event) {\n    this.sendDataCoffee($event);\n  }\n\n  sendDataCoffee(key : string) {\n    this.GetCoffeeByID(key);\n    this.deliverCoffeeID = key;\n\n  }\n  GetCoffeeByID(key : string){\n    let coffeeObject = this.coffeeService.GetCoffee(key);\n    \n    coffeeObject.valueChanges().subscribe(data => {\n      console.log(\"coffee\", data);\n      this.deliverCoffee = data;\n    });\n  }\n}\n","<!-- <app-coffee></app-coffee> -->\n<!-- <app-list-coffee></app-list-coffee> -->\n\n<div class=\"row\">\n  <div class=\"col-sm-6\">\n    <app-coffee [deliverCoffee]=\"deliverCoffee\"></app-coffee>\n  </div>\n  <div class=\"col-sm-6\">\n    <app-list-coffee (messageEvent)=\"getDataCoffee($event)\"></app-list-coffee>\n  </div>\n</div>\n","import { Component,OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr'; // Alert message using NGX toastr\n\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms'; // Reactive form services\nimport { ActivatedRoute, Router } from '@angular/router'; // ActivatedRoue is used to get the current associated components information.\n\nimport {CoffeeService} from '../../shared/coffee/coffee.service';\nimport {Coffee} from '../../shared/coffee/coffee';\n\n\n@Component({\n  selector: 'app-coffee',\n  templateUrl: './coffee.component.html',\n  styleUrls: ['./coffee.component.css']\n})\nexport class CoffeeComponent implements OnInit {\n \n  coffeeForm: FormGroup;\n  public visitingTable: Coffee;\n  public listVisiting: Coffee[];\n  isAdd : boolean;\n  @Input() deliverCoffee: Coffee; // decorate the property with @Input()\n\n  \n  constructor(\n\n    public formBuilder: FormBuilder,\n    public coffeeService: CoffeeService,\n    public toastr: ToastrService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.deliverCoffee = new Coffee;\n    this.coffeeForm = this.formBuilder.group({\n      $key: [''],\n      // id: '',\n      name: '',\n      address: '',\n      urlQR: '',\n      createdDate: '',\n      createdBy: '',\n      updatedDate: '',\n      updatedBy: '',\n      status: '',\n      ownerCoffee: '',\n      phone: '',\n      email: '',\n\n    });\n    this.isAdd = true;\n\n    // if(this.deliverCoffeeID){\n    //   this.GetCoffeeByID(this.deliverCoffeeID);\n    // }\n  \n    \n  }\n\n  getDataCoffee($event) {\n    this.isAdd = false;\n    console.log('$event', $event);\n    this.coffeeService.GetCoffee($event).valueChanges().subscribe(data => {\n      console.warn('coffee', data);\n      data['$key'] = $event;\n     \n      this.coffeeForm.setValue(data)  // Using SetValue() method, It's a ReactiveForm's API to store intial value of reactive form \n    });\n  }\n\n\n  submitCoffee(coffee){\n    this.coffeeService.AddCoffee(coffee);\n    this.resetForm();\n    this.toastr.success(\n      this.coffeeForm.controls['name'].value + ' successfully added!'\n    );\n    this.isAdd = true;\n\n\n  }\n\n  resetForm() {\n    this.coffeeForm.reset();\n    this.isAdd = true; \n  }\n  updateCoffee(){\n\n  }\n\n}\n","\n\n\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n       \n    <div class=\"panel-heading\">\n      <h3 class=\"panel-title text-center\">Coffee Information</h3>\n      </div>\n      <form [formGroup]=\"coffeeForm\" (ngSubmit)=\"submitCoffee(coffeeForm.value)\" novalidate>\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12\">\n              <div hidden class=\"row\">\n                  <div class=\"col-md-12 mb-3\">\n                    <input\n                      type=\"text\"\n                      formControlName=\"$key\"\n                      class=\"form-control\"\n                      required\n                    />\n                 \n                  </div>\n      \n                  <div class=\"col-md-12 mb-3\">\n                    <label>Address</label>\n                    <input\n                      type=\"text\"\n                      formControlName=\"address\"\n                      class=\"form-control\"\n                      required\n                    />\n                  </div>\n                </div>\n            <div class=\"row\">\n              <div class=\"col-md-12 mb-3\">\n                <label>Coffee Name</label>\n                <input\n                  type=\"text\"\n                  formControlName=\"name\"\n                  class=\"form-control\"\n                  required\n                />\n             \n              </div>\n  \n              <div class=\"col-md-12 mb-3\">\n                <label>Address</label>\n                <input\n                  type=\"text\"\n                  formControlName=\"address\"\n                  class=\"form-control\"\n                  required\n                />\n              </div>\n            </div>\n  \n            <div class=\"row\">\n              <div class=\"col-md-12 mb-3\">\n                <label>link QR</label>\n                <input\n                  type=\"text\"\n                  formControlName=\"urlQR\"\n                  class=\"form-control\"\n                  required\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-12 mb-3\">\n                <label>Owner Coffee</label>\n                <input\n                  type=\"text\"\n                  formControlName=\"ownerCoffee\"\n                  class=\"form-control\"\n                  required\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-12 mb-3\">\n                <label>Phone</label>\n                <input\n                  type=\"text\"\n                  formControlName=\"phone\"\n                  class=\"form-control\"\n                  required\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-12 mb-3\">\n                <label>Email</label>\n                <input\n                  type=\"email\"\n                  formControlName=\"email\"\n                  class=\"form-control\"\n                  required\n                />\n              </div>\n            </div>\n  \n            <div class=\"form-group text-right\">\n              <button type=\"button\" \n                (click)=\"resetForm()\"\n                class=\"btn btn-secondary gap-right\">\n                Reset\n              </button>\n              <button *ngIf=\"!isAdd\" (click)=\"updateCoffee()\" class=\"btn btn-success\">Update</button>\n              <button *ngIf=\"isAdd\" type=\"submit\" class=\"btn btn-success\">Add</button>\n            </div>\n          </div>\n        </div>\n      </form>\n  \n      </div>\n      <div class=\"col-sm-6\">\n        <app-list-coffee (messageEvent)=\"getDataCoffee($event)\"></app-list-coffee>\n        <!-- <app-list-coffee></app-list-coffee> -->\n      </div>\n    </div>\n    ","import { Component,OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms'; // Reactive form services\nimport { ToastrService } from 'ngx-toastr'; // Alert message using NGX toastr\n\nimport {Coffee} from '../../../shared/coffee/coffee';\nimport {CoffeeService} from '../../../shared/coffee/coffee.service';\n\n@Component({\n  selector: 'app-list-coffee',\n  templateUrl: './list-coffee.component.html',\n  styleUrls: ['./list-coffee.component.css']\n})\nexport class ListCoffeeComponent implements OnInit {\n\n  coffees : Coffee[];\n  @Output() messageEvent = new EventEmitter<string>();\n  constructor(\n    public coffeeService : CoffeeService,\n    public toastr: ToastrService\n\n  ) { }\n\n  ngOnInit(): void {\n    let s = this.coffeeService.GetListCoffee();\n    s.snapshotChanges().subscribe(data => {\n      // Using snapshotChanges() method to retrieve list of data along with metadata($key)\n      this.coffees = [];\n      data.forEach(item => {\n        let a = item.payload.toJSON();\n        a['$key'] = item.key;\n        this.coffees.unshift(a as Coffee);\n      });\n    });\n\n  }\n\n  SelectCoffee(coffee){\n    console.log('select coffee:', coffee);\n    this.SendDataCoffee(coffee.$key);\n  }\n\n\n  // This method raises the custom event. We will bind this\n  // method to the change event of all the 3 radio buttons\n \n  SendDataCoffee(key : string) {\n    console.log('groupID = ', key);\n    this.messageEvent.emit(key);\n  }\n\n}\n","<div class=\"pricing-header mx-auto\">\n        <div class=\"panel-heading\">\n                <h3 class=\"panel-title text-center\">Coffee List</h3>\n              </div>\n  <div class=\"table-responsive\">\n    <table\n      class=\"table table-bordered table-responsive-sm table-responsive-md table-responsive-lg\"\n    >\n      <thead>\n        <tr>\n          <th scope=\"col\" class=\"text-center\">Coffee Name</th>\n          <th scope=\"col\" class=\"text-center\">Address</th>\n          <th scope=\"col\" class=\"text-center\">Owner Coffee</th>\n          <th scope=\"col\" class=\"text-center\">Phone</th>\n          <th scope=\"col\" class=\"text-center\">Email</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let coffee of coffees\" \n        (click)=\"SelectCoffee(coffee);\"\n        >\n          <td>{{ coffee.name }}</td>\n          <td>{{ coffee.address }}</td>\n          <td>{{ coffee.ownerCoffee }}</td>\n          <td>{{ coffee.phone }}</td>\n          <td>{{ coffee.email }}</td>\n         <td>\n            <a class=\"nav-link\" routerLink=\"/coffee-seat/{{coffee.$key}}\" routerLinkActive=\"active\">\n              Go</a>\n         </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport {AuthService}  from '../shared/service/auth.service'\nimport { Router, Params , ActivatedRoute} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.css']\n})\nexport class LoginComponent {\n\n  loginForm: FormGroup;\n  errorMessage: string = '';\n  public coffeeID: string;\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private fb: FormBuilder,\n    private route: ActivatedRoute\n  ) {\n    this.coffeeID = this.route.snapshot.params.id;\n    console.log('this.coffeeID', this.coffeeID);\n  }\n\n  createForm() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required ],\n      password: ['',Validators.required]\n    });\n  }\n\n  tryFacebookLogin(){\n    this.authService.doFacebookLogin()\n    .then(res => {\n      console.log(\"userID\", res.user.uid);\n      localStorage.setItem('seat-userID', res.user.uid); //Set Global\n      localStorage.setItem('seat-coffeeID', this.coffeeID); //Set Global\n      this.router.navigate([\"/coffee-seat/\", this.coffeeID]).then( (e) => {\n        if (e) {\n          console.log(\"Navigation is successful!\");\n        } else {\n          console.log(\"Navigation has failed!\");\n        }\n      });\n    })\n  }\n\n  tryTwitterLogin(){\n    // this.authService.doTwitterLogin()\n    // .then(res => {\n    //   this.router.navigate(['/user']);\n    // })\n  }\n\n  tryGoogleLogin(){\n    this.authService.doGoogleLogin()\n    .then(res => {\n      this.router.navigate(['/user']);\n    })\n  }\n\n  tryLogin(value){\n    // this.authService.doLogin(value)\n    // .then(res => {\n    //   this.router.navigate(['/user']);\n    // }, err => {\n    //   console.log(err);\n    //   this.errorMessage = err.message;\n    // })\n  }\n\n}\n","<h1 class=\"header\">Login with Firebase or Social Providers</h1>\n<div class=\"row\">\n  <div class=\"col-sm-3\"></div>\n  <div class=\"col-sm-6\">\n    <!-- <div class=\"row\">\n      <div class=\"col-md-12 col-md-offset-3\">\n        <form [formGroup]=\"loginForm\">\n          <div class=\"form-group\">\n            <label>Email address</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" />\n          </div>\n          <div class=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              formControlName=\"password\"\n            />\n            <label class=\"error\">{{ errorMessage }}</label>\n          </div>\n          <button\n            type=\"submit\"\n            (click)=\"tryLogin(loginForm.value)\"\n            class=\"btn btn-default\"\n          >\n            Login\n          </button>\n        </form>\n      </div>\n    </div> -->\n    <div class=\"row\">\n      <div class=\"col-md-12 col-md-offset-4\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary btn-block\"\n          (click)=\"tryFacebookLogin()\"\n        >\n          Login with Facebook\n        </button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12 col-md-offset-4\">\n        <button\n          type=\"button\"\n          class=\"btn btn-danger btn-block\"\n          (click)=\"tryGoogleLogin()\"\n        >\n          Login with Google\n        </button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12 col-md-offset-4\">\n        <button\n          type=\"button\"\n          class=\"btn btn-info btn-block\"\n          (click)=\"tryTwitterLogin()\"\n        >\n          Login with Twitter\n        </button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12 col-md-offset-4\">\n        <p>No account yet? <a href=\"/register\">Create an account</a></p>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-3\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router'; // ActivatedRoue is used to get the current associated components information.\n\nimport { VisitingService } from '../../shared/visiting/visiting.service';\nimport { Visiting } from '../../shared/visiting/visiting';\n\n@Component({\n  selector: 'app-list-seat-done',\n  templateUrl: './list-seat-done.component.html',\n  styleUrls: ['./list-seat-done.component.css']\n})\nexport class ListSeatDoneComponent implements OnInit {\n\n  coffeeID: string;\n  seats: Visiting[];\n  constructor(\n    public route: ActivatedRoute,\n    public visitingService: VisitingService\n  ) {\n    this.coffeeID = this.route.snapshot.params.id;\n    console.log('this.coffeeID', this.coffeeID);\n  }\n\n  ngOnInit(): void {\n    let dateForlder = this.visitingService.GetForMatDateDDMMYYYY();\n    let s = this.visitingService.GetListVisiting(this.coffeeID, dateForlder);\n    s.snapshotChanges().subscribe(data => {\n      // Using snapshotChanges() method to retrieve list of data along with metadata($key)\n      this.seats = [];\n      data.forEach(item => {\n        let a = item.payload.toJSON();\n        if(a['status'] == 1){\n          a['$key'] = item.key;\n          a['coffeeID'] = this.coffeeID;\n          this.seats.push(a as Visiting);\n        }\n      });\n    });\n  }\n\n  onWaiting(seat){\n    seat.status = 0;\n    this.visitingService.UpdateVisiting(seat);\n    console.log('seat', seat);\n  }\n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/coffee-list-seat/{{coffeeID}}\" routerLinkActive=\"active\">\n          Đang chờ</a\n        >\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/coffee-list-seat-done/{{coffeeID}}\" routerLinkActive=\"active\">\n          Đã giao</a\n        >\n      </li>\n\n    </ul>\n  </div>\n</nav>\n  \n  \n  <div class=\"pricing-header mx-auto\">\n    <div class=\"panel-heading\">\n      <h3 class=\"panel-title text-center\">Danh sách vị trí ngồi</h3>\n    </div>\n    <div class=\"table-responsive\">\n      <table\n        class=\"table table-bordered table-responsive-sm table-responsive-md table-responsive-lg\"\n      >\n        <thead>\n          <tr class=\"text-center\">\n            <th scope=\"col\">Số thẻ</th>\n            <th scope=\"col\">Vị trí ngồi</th>\n            <th scope=\"col\">Trạng thái</th>\n            <th scope=\"col\">Ngày</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let seat of seats\">\n            <td>{{ seat.cardCode }}</td>\n            <td>{{ seat.visiting }}</td>\n            <td>\n              <b *ngIf=\"seat.status == 0\" style=\"color: green\">Đang chờ</b>\n              <b *ngIf=\"seat.status == 1\" style=\"color: green\">Đã giao</b>\n            </td>\n            <td>{{ seat.orderedDate }}</td>\n            <td>\n              <button (click) = \"onWaiting(seat)\" type=\"button\" class=\"btn btn-warning btn-circle btn-lg fa fa-check\">\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router'; // ActivatedRoue is used to get the current associated components information.\n\nimport { VisitingService } from '../../shared/visiting/visiting.service';\nimport { Visiting } from '../../shared/visiting/visiting';\n\n@Component({\n  selector: 'app-list-seat',\n  templateUrl: './list-seat.component.html',\n  styleUrls: ['./list-seat.component.css']\n})\nexport class ListSeatComponent implements OnInit {\n  coffeeID: string;\n  seats: Visiting[];\n  constructor(\n    public route: ActivatedRoute,\n    public visitingService: VisitingService\n  ) {\n    this.coffeeID = this.route.snapshot.params.id;\n    console.log('this.coffeeID', this.coffeeID);\n  }\n\n  ngOnInit(): void {\n    let dateForlder = this.visitingService.GetForMatDateDDMMYYYY();\n    let s = this.visitingService.GetListVisiting(this.coffeeID, dateForlder);\n    s.snapshotChanges().subscribe(data => {\n      // Using snapshotChanges() method to retrieve list of data along with metadata($key)\n      this.seats = [];\n      data.forEach(item => {\n        let a = item.payload.toJSON();\n\n        if(a['status'] == 0){\n          a['$key'] = item.key;\n          a['coffeeID'] = this.coffeeID;\n          this.seats.push(a as Visiting);\n        }\n       \n      });\n    });\n\n  }\n\n  onDone(seat){\n    seat.status = 1;\n    this.visitingService.UpdateVisiting(seat);\n    console.log('seat', seat);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/coffee-list-seat/{{coffeeID}}\" routerLinkActive=\"active\">\n          Đang chờ</a\n        >\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/coffee-list-seat-done/{{coffeeID}}\" routerLinkActive=\"active\">\n          Đã giao</a\n        >\n      </li>\n\n    </ul>\n  </div>\n</nav>\n\n\n<div class=\"pricing-header mx-auto\">\n  <div class=\"panel-heading\">\n    <h3 class=\"panel-title text-center\">Danh sách vị trí ngồi</h3>\n  </div>\n  <div class=\"table-responsive\">\n    <table\n      class=\"table table-bordered table-responsive-sm table-responsive-md table-responsive-lg\"\n    >\n      <thead>\n        <tr class=\"text-center\">\n          <th scope=\"col\">Số thẻ</th>\n          <th scope=\"col\">Vị trí ngồi</th>\n          <th scope=\"col\">Trạng thái</th>\n          <th scope=\"col\">Ngày</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let seat of seats\">\n          <td>{{ seat.cardCode }}</td>\n          <td>{{ seat.visiting }}</td>\n          <td>\n            <b *ngIf=\"seat.status == 0\" style=\"color: green\">Đang chờ</b>\n            <b *ngIf=\"seat.status == 1\" style=\"color: green\">Đã giao</b>\n          </td>\n          <td>{{ seat.orderedDate }}</td>\n          <td>\n            <button (click) = \"onDone(seat)\" type=\"button\" class=\"btn btn-warning btn-circle btn-lg fa fa-check\">\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr'; // Alert message using NGX toastr\n\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms'; // Reactive form services\nimport { ActivatedRoute, Router } from '@angular/router'; // ActivatedRoue is used to get the current associated components information.\n\nimport { VisitingService } from '../../shared/visiting/visiting.service';\nimport { Visiting } from '../../shared/visiting/visiting';\n\n@Component({\n  selector: 'app-seat-detail',\n  templateUrl: './seat-detail.component.html',\n  styleUrls: ['./seat-detail.component.css']\n})\nexport class SeatDetailComponent implements OnInit {\n  frmInputVisiting: FormGroup;\n  public visitingTable: Visiting;\n  public listVisiting: Visiting[];\n  public isAdded: Boolean;\n  public coffeeID: string;\n  public userID : string\n\n  constructor(\n    public _fb: FormBuilder,\n    public _visitingService: VisitingService,\n    public _toastr: ToastrService,\n    private route: ActivatedRoute\n  ) {\n    // this.coffeeID = localStorage.getItem('seat-coffeeID');\n    this.coffeeID = this.route.snapshot.params.id;\n    console.log('this.coffeeID', this.coffeeID);\n\n    // this.userID = localStorage.getItem('seat-userID'); //Set Global\n    this.userID = '3';\n    console.log('seat-userID',this.userID);\n\n  }\n  ngOnInit(): void {\n    this.visitingTable = new Visiting();\n    this.isAdded = true;\n    this.frmInputVisiting = this._fb.group({\n      $key: [''],\n      userID: this.userID,\n      coffeeID: this.coffeeID,\n      cardCode: '',\n      visiting: '',\n      status: 0,\n      orderedDate: '',\n      ordereddBy: '1',\n      doneDate: '',\n      doneBy: '1'\n    });\n  }\n\n  onAddVisiting(value) {\n    this._visitingService.AddVisiting(value);\n    console.log('add coffeeID', this.coffeeID);\n    // this.ResetForm();\n    this._toastr.success(\n      this.frmInputVisiting.controls['cardCode'].value + ' successfully added!'\n    );\n    this.isAdded = false;\n  }\n\n  updateSeat(seat){\n    alert(seat);\n    console.log('seat',seat);\n  }\n\n  ResetForm() {\n    this.frmInputVisiting.reset();\n  }\n}\n","<div class=\"container\">\n  <!-- <div class=\"panel-heading\">\n    <h3 class=\"panel-title text-center\">Thông tin khách hàng</h3>\n  </div>\n  <div class=\"row table-responsive card-code-table\">\n    <div>\n      <table class=\"table table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Mã thẻ</th>\n            <th scope=\"col\">Vị trí ngồi</th>\n            <th scope=\"col\">Ngày giờ</th>\n            <th scope=\"col\">Trạng thái</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngIf=\"visitingTable\">\n            <td>{{ visitingTable.cardCode }}</td>\n            <td>{{ visitingTable.visiting }}</td>\n            <td>{{ visitingTable.orderedDate }}</td>\n            <td>Đang đợi</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div> -->\n\n  <div class=\"row\">\n    <div class=\"container\">\n      <form\n        [formGroup]=\"frmInputVisiting\"\n      >\n        <div class=\"panel panel-primary\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title text-center\">Vui lòng nhập thông tin</h3>\n          </div>\n          <div class=\"panel-body\">\n            <div class=\"form-group\">\n              <label for=\"cardCode\">Mã thẻ</label>\n              <input\n                id=\"cardCode\"\n                formControlName=\"cardCode\"\n                type=\"text\"\n                class=\"form-control\"\n                required\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"visiting\">Vị trí ngồi</label>\n              <input\n                id=\"visiting\"\n                formControlName=\"visiting\"\n                type=\"text\"\n                class=\"form-control\"\n                required\n              />\n            </div>\n          </div>\n          <div class=\"panel-footer\">\n            <button *ngIf=\"isAdded\" (click) = \"onAddVisiting(frmInputVisiting.value)\" class=\"btn btn-primary\">Lưu</button>\n            <button (click) = \"updateSeat(frmInputVisiting.value)\" *ngIf=\"!isAdded\" class=\"btn btn-primary\">Sửa</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n// Firebase\nimport {\n  AngularFireDatabase,\n  AngularFireList,\n  AngularFireObject\n} from '@angular/fire/database'; // Firebase modules for Database, Data list and Single object\n\nimport {Coffee} from '../coffee/coffee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoffeeService {\n  listCoffee : AngularFireList<any>;\n  coffeeObject : AngularFireObject<any>;\n  \n\n  constructor(public db: AngularFireDatabase) {\n    \n   }\n    // Fetch Single Student Object\n  GetCoffee(key: string) {\n    this.coffeeObject = this.db.object('coffee/' + key);\n    return this.coffeeObject;\n  }\n\n  AddCoffee(coffee : Coffee){\n    this.listCoffee = this.db.list('/coffee');\n    this.listCoffee.push({\n      // id : coffee.id,\n      name: coffee.name,\n      address: coffee.address,\n      urlQR: coffee.urlQR,\n      ownerCoffee: coffee.ownerCoffee,\n      phone: coffee.phone,\n      email: coffee.email,\n      createdDate: this.GetCurrentDate(),\n      createdBy: coffee.createdBy,\n      updatedDate: coffee.updatedDate,\n      updatedBy: coffee.updatedBy,\n      status: coffee.status\n\n    });\n\n  }\n\n\n  UpdateCoffee(coffee : Coffee){\n    this.db\n    .object('/coffee/' + coffee.$key)\n    .update({\n      name: coffee.name,\n      address: coffee.address,\n      urlQR: coffee.urlQR,\n      ownerCoffee: coffee.ownerCoffee,\n      phone: coffee.phone,\n      email: coffee.email,\n      updatedDate: this.GetCurrentDate(),\n      updatedBy: coffee.updatedBy,\n      status: coffee.status\n    });\n\n  }\n\n  DeleteCoffee(coffee: Coffee) {\n    this.db\n      .object('/coffee/'+ coffee.$key)\n      .remove();\n  }\n\n  GetListCoffee() {\n    this.listCoffee = this.db.list('coffee');\n    return this.listCoffee;\n  }\n  GetCurrentDate() {\n    var today = new Date();\n    var date =\n      today.getFullYear() +\n      '-' +\n      (today.getMonth() + 1) +\n      '-' +\n      today.getDate();\n    var time =\n      today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n    var dateTime =  time + ' ' + date;\n\n    return dateTime;\n  }\n\n\n}\n","export class Coffee {\n    $key: string;\n    // id:string;\n    name: string;\n    address: string;\n    urlQR: string;\n    createdDate: string;\n    createdBy: string;\n    updatedDate:number;\n    updatedBy:string;\n    status: string;\n    ownerCoffee:string;\n    phone:string;\n    email:string;\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  constructor(\n    public afAuth: AngularFireAuth\n  ){}\n \n   doFacebookLogin(){\n     return new Promise<any>((resolve, reject) => {\n       let provider = new firebase.default.auth.FacebookAuthProvider();\n       this.afAuth\n       .signInWithPopup(provider)\n       .then(res => {\n        //  console.log(\"doFacebookLogin - res =>\", res);\n        //  console.log(\"userID\", res.user.uid);\n         resolve(res);\n       }, err => {\n         console.log(\"doFacebookLogin\", err);\n         reject(err);\n       })\n     })\n   }\n \n   doTwitterLogin(){\n     return new Promise<any>((resolve, reject) => {\n       let provider = new firebase.default.auth.TwitterAuthProvider();\n       this.afAuth\n       .signInWithPopup(provider)\n       .then(res => {\n         resolve(res);\n       }, err => {\n         console.log(err);\n         reject(err);\n       })\n     })\n   }\n \n   doGoogleLogin(){\n     return new Promise<any>((resolve, reject) => {\n       let provider = new firebase.default.auth.GoogleAuthProvider();\n       provider.addScope('profile');\n       provider.addScope('email');\n       this.afAuth\n       .signInWithPopup(provider)\n       .then(res => {\n         resolve(res);\n       }, err => {\n         console.log(err);\n         reject(err);\n       })\n     })\n   }\n \n   doRegister(value){\n     return new Promise<any>((resolve, reject) => {\n       firebase.default.auth().createUserWithEmailAndPassword(value.email, value.password)\n       .then(res => {\n         resolve(res);\n       }, err => reject(err))\n     })\n   }\n \n   doLogin(value){\n     return new Promise<any>((resolve, reject) => {\n       firebase.default.auth().signInWithEmailAndPassword(value.email, value.password)\n       .then(res => {\n         resolve(res);\n       }, err => reject(err))\n     })\n   }\n \n   doLogout(){\n     return new Promise((resolve, reject) => {\n       if(firebase.default.auth().currentUser){\n         this.afAuth.signOut();\n         resolve();\n       }\n       else{\n         reject();\n       }\n     });\n   }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {\n  AngularFireDatabase,\n  AngularFireList,\n  AngularFireObject\n} from '@angular/fire/database'; // Firebase modules for Database, Data list and Single object\n\nimport { Visiting } from '../visiting/visiting';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisitingService {\n  listVisiting: AngularFireList<any>; // Reference to Student data list, its an Observable\n  vistingObject: AngularFireObject<any>; // Reference to Student object, its an Observable too\n  dateDDMMYYYY : string;\n\n  constructor(public db: AngularFireDatabase) {\n    this.dateDDMMYYYY = this.GetForMatDateDDMMYYYY();\n  }\n\n  AddVisiting(visiting: Visiting) {\n    this.listVisiting = this.db.list('/seat/' + visiting.coffeeID + '/' + this.dateDDMMYYYY) ;\n    console.log('add seat', visiting);\n    this.listVisiting.push({\n      // $key:'111',\n      userID: visiting.userID,\n      coffeeID: visiting.coffeeID,\n      cardCode: visiting.cardCode,\n      visiting: visiting.visiting,\n      status: visiting.status,\n\n      dateFolder:this.dateDDMMYYYY,\n      orderedDate: this.GetCurrentDate(),\n      ordereddBy: visiting.ordereddBy,\n      doneDate: '',\n      doneBy: ''\n    });\n\n   \n  }\n\n\n  UpdateVisiting(visiting: Visiting) {\n   \n    this.db\n      .object('/seat/' + visiting.coffeeID + '/' + visiting.dateFolder + '/' + visiting.$key)\n      .update({\n        cardCode: visiting.cardCode,\n        visiting: visiting.visiting,\n        status: visiting.status,\n        doneDate: this.GetCurrentDate(),\n        doneBy: visiting.doneBy\n      });\n  }\n\n  DeleteVisiting(visiting: Visiting) {\n    this.db\n      .object('/seat/' + visiting.coffeeID + '/' + visiting.dateFolder + '/' + visiting.$key)\n      .remove();\n  }\n\n  GetListVisiting(coffeeID, dateFolder) {\n    this.listVisiting = this.db.list('seat/' + coffeeID + '/' + dateFolder);\n    return this.listVisiting;\n  }\n\n\n\n  // GetVisiting(id: string) {\n  //   this.vistingObject = this.db.object('seat/' + id);\n  //   console.log('Get seat' + id + ': ' + this.vistingObject);\n  //   return this.vistingObject;\n  // }\n\n  GetCurrentDate() {\n    var today = new Date();\n    var date = today.getDate() + '-' + (today.getMonth() + 1) + '-' +today.getFullYear();\n  \n    var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n    var dateTime =  time + ' ' + date;\n\n    return dateTime;\n  }\n\n\n  GetForMatDateDDMMYYYY(){\n    const dateObj = new Date();\n    const month = dateObj.getMonth();\n    const day = String(dateObj.getDate()).padStart(2, '0');\n    const year = dateObj.getFullYear();\n\n    return  day + month + year;\n\n  }\n}\n\n","export class Visiting {\n    $key: string;\n    userID: string;\n    coffeeID: string;\n    cardCode: string;\n    visiting: string;\n    status:number;\n    dateFolder: string;\n    orderedDate:string;\n    ordereddBy: string;\n    doneDate: string;\n    doneBy:string;\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  firebase: {\n    apiKey: \"AIzaSyDbkPe37tDuj35bO3xXopGmOUQQ76iO1Ow\",\n    authDomain: \"angular9crud-471c6.firebaseapp.com\",\n    databaseURL: \"https://angular9crud-471c6.firebaseio.com\",\n    projectId: \"angular9crud-471c6\",\n    storageBucket: \"angular9crud-471c6.appspot.com\",\n    messagingSenderId: \"15642375404\",\n    appId: \"1:15642375404:web:dec213930a8474082561c9\",\n    measurementId: \"G-DQPB0H867N\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}